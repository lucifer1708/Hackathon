version: "3.3"
services:
  backend: &python
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
        - '80:80'
    volumes:
      - ./:/app
    command: python src/server.py
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  db:
    image: postgres:latest
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs"

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"
